ВЕРСИЯ 5.0.6 05.04.2024
1. Поправлены иконки режима раздачи WI-FI
2. Поправлено размещение полей в интерфейсе
3. Поправлен режим обработки NAN 

ВЕРСИЯ 5.0.6 04.04.2024
1. Права в настройках поделены на опретоские и админские с паролем admin/superadmin. Админские права позволяют изменять 
   пароль доступа и имя сервера
2. Изменена иконка wifi
3. Изменен порядок и разбивка блоков формы на WEB-странице настроек
4. В связи с большим обхемом данных WEB-страницы сделана дефрагментация вывода HTTP
5. В настройки добавлен параметр - аремя рабочего цикла в сек (по умолчанию 1)
6. В настройки добавлен флаг отправки на сервер. Если галочка снята, то данные не отправляются и в архив не пишутся 
7. Выполнена оптимизация опроса ультразвукового сенсора   

ВЕРСИЯ 5.0.6 03.04.2024
1. Поля ограничения для каждого типа определения расстояния свои. В параметрах, в форме и в алгоритме определения расстояния
   Автокалибровку перенес в тот же блок. Автокалибровка устанавливает ограничения диапазона так же как высота без машины
2. Цвет бесконечной и ограниченной раздачи WiFi поменял местами. Иконку бесконечной раздачи сделал белой.
3. Добавил мигание белым при нажатии кнопки "Сохранить"
4. После сброса магнитом пароля (длинное нажатие) производится перезагрузка с отображением "радуги"


ВЕРСИЯ 5.0.6 02.04.2024
1. Поправлены все режимы светодиодной ленты. Убрана анимация.
2. Добавлен "Режим определения препятсвия" в параметрах, WEB-форме и определение присутсвия в соответсвии с этим параметром
3. Добавлены параметры MinDistance и MaxDistance
4. При нажатии кнопки (геркона) сразу гаснет лента
6. Поправлен ряд ошибок

ВЕРСИЯ 5.0.6 31.03.2024
1. Значения Distance, Temp, Hum теперь float. Неопределенное згачение = NAN
2. Если неопределенное значение расстояния (Distance == NAN) то возможны три варианта действия датчика 
   - оставить все как есть
   - "занято"
   - "свободно"
  данная настройка установливается в WEB-интерфейсе
3. Добавлена функция "Автокалибровка земли" (пауза + несколько измерений расстояния и запись среднего)
4. Полностью переработан интерфейс
  - полнстью изенен алгоритм и дизайн
  - добавлена страница стилей
  - все полностью в одной форме
  - убраны лишние поля, добавлены новые
  - добавлены иконки
  - добавлен режим сброса в заводские настройки
5. Добавлен режим "Бесконечный доступ к настройкам" когда контроллер запускается в режиме точки доступа всегда, 
   пока не убрать галочку в WEB-интерфейсе   
6. Нажатие на кнопочку (магнит) более 1 сек - запуск автокалибровки и перевод в режим точки доступа WI-FI
   Нажатие на кнопочку (магнит) более 10 сек - сброс пароля и имени контроллера в заводские настройки

ВЕРСИЯ 5.0.5 22.12.2022
Новый тип сенсора SONAR_JSN_SR04M_2
Длительность импульса увеличена с 10мкс до 1000мкс
Похоже на работу в жкономичном режиме

ВЕРСИЯ 5.0.4 26.12.2021
Поддержка TFLuna со своей библитекой

ВЕРСИЯ 5.0.3 02.12.2021
Добавлена поддержка LiDAR TF02Mini Plus  и TFMini PRO в режиме I2C
Флаг LIDAR_TFMINI_I2C
Если LiDAR в режиме UART, через SoftwareSerial отправляется команда на
установку режима I2C 
Для TFMini нужна перезагрузка TF02-PRO работает и так
Подключение TFMini Plus и TF02-PRO
Красный  - 5В
Белый    - GPIO4
Зеленый  - GPIO5
Черный   - GND

Подключение TFLuna
1        - 5В
2        - GPIO4
3        - GPIO5
4        - GND
5        - GND
6        - свободный



ВЕРСИЯ 5.0.2 01.12.2021
Добавлен флаг #define SONAR_FAKE в Config.h
Обработка ведется в ProcessingDistance()
Затычка на глючащие датчики SONAR_JSN_SR04TV2
При дистанции свыше 3000 они начинают показывать 
постоянно убывающее значение 
При фиксации этой тенденции устанавливается дистанция 
EA_Config.ZeroDistance = 5000
Очень не рекомендуется использовать, так как датчики
иногда что-то показывают и возникают ложные срабатывания


ВЕРСИЯ 5.0.1 14.11.2021
1. HTTP форма настроек - каждый отображаемый параметр с новой строки 
   для улучшения вида на телефонах
2. Кнопка "обновить" обновление значение параметров на странице
3. Выбор WiFi из списка
4. В конце страницы добавлен Copyright


ВЕРСИЯ 5.0.0 12.11.2021
1. Добавлен новый тип сонара SONAR_JSN_SR04TV2 с другим алгоритмом
   чтения 

ВЕРСИЯ 4.0.3 28.03.2021
1. Добавлен параметр LimitDistanceUp (в WEB-интерфейсе Ошибочная высота (мм))
   Если текущий уровень датчика выше этого параметра, то статус "Занято"
   
2. В Config.h строка 13 и 14 - настройка типа сенсора. 

3. Добавлен параметр ZeroDistance (Высота при показании 0 мм) Если 0 или меньше, то отключен

Для подключения с сенсором JSN-SR04T
#define SONAR_SENSOR_TYPE    SONAR_JSN_SR04T
//#define SONAR_SENSOR_TYPE    SONAR_DYP_ME007Y
Для подключения с сенсором DYP-ME007Y
//#define SONAR_SENSOR_TYPE    SONAR_JSN_SR04T
#define SONAR_SENSOR_TYPE    SONAR_DYP_ME007Y

Пин реле светофора настраивается в строке 51 
#define PinController            16
Для датчика DYP-ME007Y можно устанавливать значение 5 и 16, для JSN-SR04T только 16


ВЕРСИЯ 4.0.2 19.12.2020
1. Подключение ультразвукового сенсора JSN-SR04T
   Тип сенсора 1 в Config.h
   Подключение:
   Сенсор JSN-SR04T
     GPIO4 - ECHO
     GPIO5 - TRIG
   Кнопка                   - GPIO0
   Датчик температуры DHT22 - GPIO 2
   Лента WS2812             - GPIO 13
   Управление светофором    - GPIO16
   Модуль RTC I2C
     GPIO14 - SDA
     GPIO12 - SCL	 

ВЕРСИЯ 4.0.1 05.04.2020
1. Добавлена задержка при включении и отключении светофора. Задержка устанавливается в WEB-интерфейсе 
   и сохраняется в EEPROM. Если нужно моментальное срабатывание без задержки - параметры установить в 0
2. Добавлен максимальный интервал ожидание ответа HTTP запроса до 2 сек. Запросы стали стабильнее работать
3. При периодической отправки (раз в 60 сек) не отправляется значение кнопки. Поэтому заказ формировать не будет

p.s. После прошивки настройки EEPROM сбросятся в связи с изменением структуры конфига

ВЕРСИЯ 4.0.0 28.03.2020
Обновлены библиотеки DHT, NeoPixel, RTC на последние версии
Добавлено использование библиотек WiFiPing, StackArray и SButton
Работа с сонаром переписана на штатной SoftwareSerial
Проект реструктурирован, все дополнительные библиотеки интегрированы в проект в папку SRC
Вся прошивка скомпилирована под последней версией ArduinoIDE (1.8.12) и ESP8266 Core (2.6.3)
Компиляция производится для ESP8266 Flash SIZE 1MB SPIFFS None (Для ESP7)
Полностью переписан алгоритм работы
1. WiFi пытается подключаться каждые 5 секунд в основном цикле.
   Если произошло отключение, то попытка возобновляется через 5 секунд.
   Если попытка неудачная, то через 20 сек перезагружается WiFi модем, но контроллер продолжает работать
2. Опрос сонара ProcessDistance() в основном цикле каждую секунду (LoopInterval).
   При изменении дистанции сразу меняется цвет ленты, срабатывает реле и
   значение записывается в стек EA_Ram для последующей отправки на сервер
   Также производится опрос датчика температуры и модуля RTC
3. Каждые 10 сек (GetStatusInterval) если есть подключение, производится пинг с HTTP сервером.
   Если PING нормальный, посылается статус и парсится время.
   Если PING нормальный и есть значения в архиве, то посылается до 10 значений из журнала
   Если PING нормальный и архив пуст и есть значения в стеке, посылается значение из стека
   Если посылка не удалась, то значение помещается обратно в стек
   Если нет WiFi или PING не прошел и в стеке есть значения, все значения переписываются в архив и последнее значение сохраняется
4. Каждые 60000 секунд (SendInterval) при наличии WiFi и PING посылается состояние на сервер
5. Логика работы светодиодной ленты - первый светодиод это состояния WiFi, остальные - состояние сонара
   Вся лента кроме первого светодиода:
      Бело/сине/красная при загрузке.
      Красная - мойка занята
      Синяя - мойка свободна
   Первый светодиод:
      Красный - WiFi отсутствует или не сконфигурирован
      Желтый - идет подключение
      Зеленый - WiFi подключен
      Белый - режим точки доступа
6. При длинном нажатии кнопки (более 3 сек) сохраняется значение сонара (Ground),
   сбрасываются настройки WiFi и конфигурация сонара, контроллер переводится в режим точки доступа
   Первый светодиод загорается белым цветом
   Настройка производится подключением к контроллеру по WiFi и заход на страничку 192.168.4.1
   Автоматический выход из режима точки доступа через 3 минуты
   При повторном длинном нажатии на кнопку производится возврат в нормальный режим контроллера
   с попыткой подключения (см п.1)
7. прочие изменения
7.1 Отключен сторожевой таймер
7.2 Попытка подключения к серверу производится только после успешного PING чтобы не было зависаний
7.3 Увеличено время ожидания ответа сервера с 200мс до 400мс (архив 600мс) для более стабильного ответа
7.4 Убраны все задержки срабатывания кнопки
7.5 Добавлена возможность прошивки через WEB-интерфейс (если памяти в контроллере хватает)

ВЕРСИЯ 3.1.5 04.03.2020
1. Убрал из кода поддержку PCF8574,поддержку WebSocket для работы с сервером, анимацию на светодиодной ленте,
   управлением цифровыми выходами и сторожевым таймером с сервера
2. Убрал в режиме AP отсылку на сервер
3. Поправил отправку статуса
4. Поправил тайминги и счетчик ошибок в конфиге   


ВЕРСИЯ 3.1.4 18.02.2020
1. В основном цикле при отсутствии соединения делается все кроме отправки на сервер
   (Обнуление уровня, срабатывание уровня, установка цвета светодиодной ленты и пр. )
2. 20.02.2020 добавил - в цикле все действия кроме отправки на сервер производятся без WiFi

ВЕРСИЯ 3.1.3 14.02.2020
1. Если ультразвуковой датчик показывает 0 то дистанция 5000
2. Если ультразвуковой датчик показывает больше чем уровень земли, то кнопка выключена
   (строки 1140 и 1150 в основной программе)

ВЕРСИЯ 3.1.2 13.02.2020
1. Считывание всех сенсоров в режиме отсутствия WiFi (точка доступа)
2. Отправка параметров раз в минуту (SendInterval)
   Раскомментарил то что убрано в 2016


ВЕРСИЯ 3.1 все старое + светофор
Собирать на версии ESP Core 2.4.2 не выше !!!
11.02.2020
1. Взята прошивка 2.2.9. Добавлен пин управления светофором 
   в Config.h 
   #define PinController            2
   Контроллер срабатывает по уровню вместе с реле
2. При сбрасывании параметров кнопкой добавтл обнуления архива значений
   EA_clear_arh()   
3. Добавил попытку восстановления WiFi каждые 5 минут в случае потери соединения

05.07.19
Если дистанция датчика нулевая, то ставим 5м

26.02.2019

GPIO 4  - ультразвуковой датчик
GPIO 5  - реле
GPIO 12 - выход на контроллер
GPIO 0  - кнопка калибровки

ВЕРСИЯ 3.0 - управление светофором


18.05.2017
1. Добавил реле на выход PinRelay

04.09.2016
1. Добавил три цифры по сенсору высоты в отдельной строке
2. Калибровка уровня доступна клиенту
3. По сохранению режим точки доступа переходи в режим соединения
4. После нажатия кнопки и сброса настроек поставил принудительную перезагрузку

03.09.2016
1. В режиме точки доступа WDT сбрасывется постоянно
2. При нажатии кнопки (геркона) земли уровень записывается не нулевой, а с датчика
3. Клиент тоже имеет доступ к настройкам в ограниченном объеме
4. В заголовок страниц добавлены показания датчиков и время, главная страница автоматически обновляется каждый 5 сек
5. Косметика интерфейса

01.09.2016
1. Исправлен баг, не прописывался уровень земли через ВЕБ
2. Добавлена галка - режим точки доступа

31.08.2016
1. Добавлен пользователь "оператор"
Пароль по умолчанию
Администратор: admin
Оператор: user
2. Права настроек разграничены между оператором и администратором
3. Исправлена форма (согласно рисунка)
4. В режиме точки доступа отключен опрос всех датчиков

27.08.2016 Версия 2.2
Добавлен WEB-итерфейс
При старте контроллера появляется точка доступа WC_CONTROLLER без пароля.
После подключения к ней доступ 
http://192.168.4.1
Пароль по умолчанию: admin
При калибровке земли все настройки сбрасываются



17.03.2016
Добавлена функция перезагрузки, если сработала кнопка и нету связи
// Перегружать через заданное количество ошибок связи, если сработала кнопка. 0 - отключено
#define RESET_ERR_COUNT          1



05.03.2016
Добавлена функция срабатывания кнопки порастоянию ультразвукового датчика
Алгоритм. 
- В EEPROM хранится расстояние для земли (см. калибровка)
- Если разница текущего расстояния и земли меньше LimitDistance то значение кнопки SonarGroudState, если больше, то !SonarGroudState
- Калиброка совершается замыканием пина PinCalibrateSonar. При замыкании текущее значение ультразвукового датчика прописывается в EEPROM)
в качестве пина калибровки можно использовать оптовход PinButton. Ему для срабатывания достаточно подать +3.3В
При замыканиее диодов лента мигает 3 раза

Настройка в Config.h
// Изменение расстояния до земли в мм, когда проиходит эмуляция нажатия кнопки
#define LimitDistance            500
/ Тип ультразвукового датчика 1-горящий светодиод, 0-мигающий
#define SONAR_SENSOR_TYPE       0
// Пины на ультразвуковой датчик
#define PinDistanceTrig          4
#define PinDistanceEcho          5
#define PinCalibrateSonar        16
// Значение когда нет машины в мойке
bool SonarGroudState            = false;

Кнопку нужно отключить
#define PinButton                -1



25.02.16
1. Исправлена ошибка перезаписи при работе с архиваом
2. Исправлена ошибка сохранения архива на сервер по HTTP протоколу
3. Время опроса сервера теперь регулируется перемнной SendInterval


11.02.16
Исправлена ошибка работы с архивом при большом размере (EA_shift)
Увеличено число значений архиыных значений до 300
Для тестирования можно изменять число згачений в архиве и количество отправляемых за раз значений
в файле Archive.h
#define EA_VALUE_NUMBER 300  //Число значений архива 
#define EA_BUFFER_SIZE  10   //Максимальное число значений читаемых из архива за один раз




29.11.15
Значений ButtonBounceOn  и ButtonBounceOff больше нет, вместо них:
//Количество милисекунд до срабатывания на включение (0 сразу)
#define ButtonTimeOutOn             2000
//Количество милисекунд до срабатывания на включение (0 сразу)
#define ButtonTimeOutOff            3000

Добавлены два новых параметра для чистки архива от кратковременных заездов 
// Минимальный интервал между двумя включениями, когда не запичываетя архив,сек (0-отключено)
#define ButtonArhIntervalOn        90
// Минимальный интервал между двумя выключениями, когда не запичываетя архив,сек (0-отключено)
#define ButtonArhIntervalOff       90



17.11.15
- Вернул по WEB-сокет STAT id-датчика
- В Confog.h
bool CheckRequest                 = true;
// tue - Проверять ответ от сервера при посылке параметров на "STAT 200" false - нет
- В Config.h
bool CheckRequest                 = true;
// true - Проверять ответ от сервера при посылке параметров на "STAT 200" false - нет

- В Config.h
bool ReserveHttp                  = true;
// true - работать по HTTP, если WebSocket глюкнул, false - нет


26.10.15
В Config.h добавлено два параметра 
//С какой попытки срабатывает кнопка на включение(0 сразу)
#define ButtonBounceOn                0
//С какой попытки срабатывает кнопка на выключение(0 сразу)
#define ButtonBounceOff               2


06.10.15
Если установить 
#define PinDHT22                 -1
То температура и влажность с датчика опрашиваться не будут и устанавливаются в 0

Добавил проверку RTC модуля DS3231
Если модуль не обнаружен, то автоматически работа с часами отключается (RTCFlag = false)


04.10.15

Обработка флага WDT= от сервера. 
WDT=0 - сторожевой таймер отключен
WDT=1 - сторожевой таймер включен

Количество попыток соединения к точке доступа сделал 1


Добавлено:

1. Модуль часов реального времени DS3231 (должно работать и м DS1307)
   Первый раз считывается время с сервера, устанавливаются часы. 
   В дальнейшем время устанавливается по часам, в случае расхождения
   часов с временем сервера, часы корректируются

2. Добавлен аппаратный сброс питания через реле K1 (Схема V2.1-2)
   
3. Значение данных при изменении записывается в EEPROM
   При старте модуля предыдущее значение берется из EEPROM
   
4. Добавлена поддержка внешнего сторожевого таймера на NE555 (Схема V2.1-3)
   
Новые конфигурационные параметры:

// Пины I2C интерфейса для часов реального времени
#define PinRTC_SDA               12
#define PinRTC_SCL               14

// Пин кнопки
#define PinButton                16
// Дискретные выходы 
#define PinOut0                  -1 //GPIO12
#define PinOut1                  -1 //GPIO13
#define PinOut2                  -1 //GPIO14
#define PinHardReset             13  //Пин передергивающий питание через реле, если не нужно постваить -1 
#define PinOut3                  -1 //GPIO0

// true - работаем через WEB-сокеты, false - через HTTP
bool WebSocketFlag                = true;
// true - время берется из часов РВ, false - часов РВ нет, время берется из интернета
bool RTCFlag                      = true;

// Пин сторожевого таймера (если -1 то внешний таймер не используется)
#define PinWDT                        0
// Интервал в мс после которого перестает сбрасываться WDT
// Общее время срабатывания после первой ошибки отправки = WDTInterval + Время таймера (15с) 
#define WDTInterval               60000


Установка:

Для установки нужно распокавать все бибилиотеки из файла Библиотеки.zip в 
c:\Users\<Пользователь>\Documents\Arduino\libraries\


